<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>briup_theory</title>
    <url>/archives/briup-theory.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>点击进入思维导图</p>
</blockquote>
<ul>
<li><a href="/images/springmvc.html">springmvc</a></li>
<li><a href="/images/springboot.html">springboot</a></li>
<li><a href="/images/redis.html">redis</a></li>
</ul>
]]></content>
      <tags>
        <tag>vanse_public</tag>
      </tags>
  </entry>
  <entry>
    <title>jd2204-cms</title>
    <url>/archives/jd2204-cms.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul>
<li>📩 cms (Content Management System) 信息咨询管理系统</li>
<li>:school: jd2204 广西科技</li>
<li>:man_teacher: 整理人 vanse</li>
<li>📆 2022/10/28</li>
<li>:books: idea+mysql+git+maven+springboot+ssm</li>
</ul>
<h1 id="项目环境"><a href="#项目环境" class="headerlink" title="项目环境"></a>项目环境</h1><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><h2 id="父项目"><a href="#父项目" class="headerlink" title="父项目"></a>父项目</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.boot.dependencies.version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">spring.boot.dependencies.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">briup.version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">briup.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">mybatis-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-generator-maven-plugin.version</span>&gt;</span>1.3.7<span class="tag">&lt;/<span class="name">mybatis-generator-maven-plugin.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-generator-core.version</span>&gt;</span>1.3.7<span class="tag">&lt;/<span class="name">mybatis-generator-core.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pagehelper-spring-boot-starter.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">pagehelper-spring-boot-starter.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastdfs-client</span>&gt;</span>1.27.2<span class="tag">&lt;/<span class="name">fastdfs-client</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson-version</span>&gt;</span>1.2.68<span class="tag">&lt;/<span class="name">fastjson-version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java-jwt</span>&gt;</span>3.11.0<span class="tag">&lt;/<span class="name">java-jwt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springboot 父项目依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis整合依赖--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-spring-boot-starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis分页插件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper-spring-boot-starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis逆向工程--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.vanse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--操作流--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--fastdfs--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.tobato<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastdfs-client&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--jwt--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;java-jwt&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.boot.dependencies.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>build-info<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h3 id="briup-code"><a href="#briup-code" class="headerlink" title="briup-code"></a>briup-code</h3><blockquote>
<p>逆向工程</p>
</blockquote>
<p><strong>依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-generator-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!--配置文件的位置--&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/generatorConfig-system-vanse.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 是否覆盖 --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-generator-maven-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql-connector-java.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 跳过repackage目标 --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>配置文件</strong></p>
<blockquote>
<p>逆向工程的规则 </p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--外部数据源 逆向工程需要连接数据库--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;mybaits-generator-db.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--逆向工程配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;MyBatis3&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span> <span class="attr">defaultModelType</span>=<span class="string">&quot;flat&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 防止xml追加 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 取消所有注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressDate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--用以上的数据源文件 逆向工程--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;$&#123;driverClass&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;$&#123;connectionURL&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;$&#123;userId&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 指定生成的类型为java类型，避免数据库中number等类型字段 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 对应的实体类 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.briup.user.bean&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;../briup-user/src/main/java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--对应的XXXMapper.xml文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;mapper/basic&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;../briup-user/src/main/resources&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 对应的XXXMapper.java文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.briup.user.dao&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;../briup-user/src/main/java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--表到实体的规则名字 base_config -&gt; BaseConfig 一类规则--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- &lt;table tableName=&quot;base_%&quot; enableCountByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="comment">            &lt;domainObjectRenamingRule searchString=&quot;^Base&quot; replaceString=&quot;&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;/table&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--base_config Config-&gt;</span></span><br><span class="line"><span class="comment">         ByExample 模板 可以通过模板调用方法的形式 (不需要写sql)</span></span><br><span class="line"><span class="comment">            mybatis-plus</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;base_config&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">domainObjectName</span>=<span class="string">&quot;Config&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--映射7此--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;table tableName=&quot;cms_article&quot; domainObjectName=&quot;Article&quot; enableCountByExample=&quot;false&quot;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;&gt;&lt;/table&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;table tableName=&quot;cms_comment&quot; domainObjectName=&quot;Comment&quot; enableCountByExample=&quot;false&quot;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;&gt;&lt;/table&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;table tableName=&quot;cms_carousel&quot; domainObjectName=&quot;Carousel&quot; enableCountByExample=&quot;false&quot;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot;&gt;&lt;/table&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p><strong>数据源文件</strong></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driverClass</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="comment"># 注意，如果直接写到generatorConfig.xml文件中，需要将 &amp;符号改为 &amp;amp;</span></span><br><span class="line"><span class="attr">connectionURL</span>=<span class="string">jdbc:mysql://localhost:3306/jd2204-cms?characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;nullCatalogMeansCurrent=true</span></span><br><span class="line"><span class="attr">userId</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure>





<h3 id="briup-user"><a href="#briup-user" class="headerlink" title="briup-user"></a>briup-user</h3><blockquote>
<p>逆向工程 生成的位置</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210311408439.png" alt="image-20221031102254126"></p>
<h3 id="briup-cms"><a href="#briup-cms" class="headerlink" title="briup-cms"></a>briup-cms</h3><blockquote>
<p>业务模块</p>
</blockquote>
<h3 id="briup-common"><a href="#briup-common" class="headerlink" title="briup-common"></a>briup-common</h3><blockquote>
<p>公共模块</p>
</blockquote>
<h2 id="整合ssm"><a href="#整合ssm" class="headerlink" title="整合ssm"></a>整合ssm</h2><ul>
<li><p>依赖</p>
</li>
<li><p>配置文件</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">port</span>: <span class="string">8989</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 激活环境</span></span><br><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">profiles</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">active</span>: <span class="string">dev</span></span><br><span class="line"><span class="comment"># 映射文件位置</span></span><br><span class="line"><span class="attr">mybatis</span>:<span class="string"></span></span><br><span class="line">  <span class="meta">mapper-locations</span>: <span class="string">classpath:mapper/**/*.xml</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment"># windows的环境</span></span><br><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">datasource</span>:<span class="string"></span></span><br><span class="line">    <span class="meta">driver-class-name</span>: <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">jdbc:mysql://localhost:3306/jd2204-middleplatform?characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username</span>: <span class="string">root</span></span><br><span class="line">    <span class="attr">password</span>: <span class="string">root</span></span><br><span class="line"><span class="attr">logging</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">level</span>:<span class="string"></span></span><br><span class="line">    <span class="meta">com.briup</span>: <span class="string">debug</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>主函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/28-10-28-17:24</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：启动器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(CmsApplication.MAPPERBASEPACKAGE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CmsApplication</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">final</span> String MAPPERBASEPACKAGE = <span class="string">&quot;com.briup.user.dao&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(CmsApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="统一响应"><a href="#统一响应" class="headerlink" title="统一响应"></a>统一响应</h2><ul>
<li>状态码</li>
<li>消息</li>
<li>数据</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.web.response;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一并自定义返回状态码，如有需求可以另外增加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ResultCode</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 成功状态码（默认） */</span></span><br><span class="line">	SUCCESS(<span class="number">1</span>, <span class="string">&quot;success&quot;</span>),</span><br><span class="line">	<span class="comment">/* 失败状态码（默认） */</span></span><br><span class="line">	ERROR(<span class="number">2</span>, <span class="string">&quot;error&quot;</span>),</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 参数错误：10001-19999 */</span></span><br><span class="line">	PARAM_IS_INVALID(<span class="number">10001</span>, <span class="string">&quot;参数无效&quot;</span>),</span><br><span class="line">	PARAM_IS_BLANK(<span class="number">10002</span>, <span class="string">&quot;参数为空&quot;</span>),</span><br><span class="line">	PARAM_TYPE_BIND_ERROR(<span class="number">10003</span>, <span class="string">&quot;参数类型错误&quot;</span>),</span><br><span class="line">	PARAM_NOT_COMPLETE(<span class="number">10004</span>, <span class="string">&quot;参数缺失&quot;</span>),</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 用户错误：20001-29999*/</span></span><br><span class="line">	USER_NOT_LOGIN(<span class="number">20001</span>, <span class="string">&quot;用户未登录&quot;</span>),</span><br><span class="line">	USER_LOGIN_ERROR(<span class="number">20002</span>, <span class="string">&quot;账号不存在或密码错误&quot;</span>),</span><br><span class="line">	USER_ACCOUNT_FORBIDDEN(<span class="number">20003</span>, <span class="string">&quot;账号已被禁用&quot;</span>),</span><br><span class="line">	USER_NOT_EXIST(<span class="number">20004</span>, <span class="string">&quot;用户不存在&quot;</span>),</span><br><span class="line">	USER_HAS_EXISTED(<span class="number">20005</span>, <span class="string">&quot;用户已存在&quot;</span>),</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 业务错误：30001-39999 */</span></span><br><span class="line">	SPECIFIED_QUESTIONED_USER_NOT_EXIST(<span class="number">30001</span>, <span class="string">&quot;业务逻辑出现问题&quot;</span>),</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 系统错误：40001-49999 */</span></span><br><span class="line">	SYSTEM_INNER_ERROR(<span class="number">40001</span>, <span class="string">&quot;系统内部错误，请稍后重试&quot;</span>),</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 数据错误：50001-599999 */</span></span><br><span class="line">	DATA_NONE(<span class="number">50001</span>, <span class="string">&quot;数据未找到&quot;</span>),</span><br><span class="line">	DATA_WRONG(<span class="number">50002</span>, <span class="string">&quot;数据错误&quot;</span>),</span><br><span class="line">	DATA_EXISTED(<span class="number">50003</span>, <span class="string">&quot;数据已存在&quot;</span>),</span><br><span class="line">	DATA_USEING(<span class="number">50004</span>,<span class="string">&quot;该数据正在被引用&quot;</span>),</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 接口错误：60001-69999 */</span></span><br><span class="line">	INTERFACE_INNER_INVOKE_ERROR(<span class="number">60001</span>, <span class="string">&quot;内部系统接口调用异常&quot;</span>),</span><br><span class="line">	INTERFACE_OUTTER_INVOKE_ERROR(<span class="number">60002</span>, <span class="string">&quot;外部系统接口调用异常&quot;</span>),</span><br><span class="line">	INTERFACE_FORBID_VISIT(<span class="number">60003</span>, <span class="string">&quot;该接口禁止访问&quot;</span>),</span><br><span class="line">	INTERFACE_ADDRESS_INVALID(<span class="number">60004</span>, <span class="string">&quot;接口地址无效&quot;</span>),</span><br><span class="line">	INTERFACE_REQUEST_TIMEOUT(<span class="number">60005</span>, <span class="string">&quot;接口请求超时&quot;</span>),</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* 权限错误：70001-79999 */</span></span><br><span class="line">	PERMISSION_NO_ACCESS(<span class="number">70001</span>, <span class="string">&quot;无访问权限&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">	ResultCode(Integer code, String message) &#123;</span><br><span class="line">		<span class="keyword">this</span>.code = code;</span><br><span class="line">		<span class="keyword">this</span>.message = message;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">code</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.code;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">message</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.message;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.web.response;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一Controller中RESTFul风格接口返回的结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> Integer code;</span><br><span class="line">	<span class="keyword">private</span> String msg;</span><br><span class="line">	<span class="keyword">private</span> T data;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">Result</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">Result</span><span class="params">(Integer code, String msg)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.code = code;</span><br><span class="line">		<span class="keyword">this</span>.msg = msg;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setResultCode</span><span class="params">(ResultCode code)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 左边是result的code属性</span></span><br><span class="line">		<span class="comment">// 右边是枚举对象的code()方法</span></span><br><span class="line">		<span class="keyword">this</span>.code = code.code();</span><br><span class="line">		<span class="keyword">this</span>.msg = code.message();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作失败，自定义code和msg</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">failure</span><span class="params">(Integer code, String msg)</span> </span>&#123;</span><br><span class="line">		Result result = <span class="keyword">new</span> Result(code,msg);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作成功，没有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		Result result = <span class="keyword">new</span> Result();</span><br><span class="line">		result.setResultCode(ResultCode.SUCCESS); <span class="comment">// 1 s</span></span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作成功，有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Result&lt;T&gt; <span class="title">success</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">		Result result = <span class="keyword">new</span> Result();</span><br><span class="line">		<span class="comment">// ResultCode.SUCCESS 枚举对象</span></span><br><span class="line">		result.setResultCode(ResultCode.SUCCESS);</span><br><span class="line">		result.setData(data);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作成功，有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Result&lt;T&gt; <span class="title">success</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result(ResultCode.SUCCESS.code(),message);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作失败，没有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">failure</span><span class="params">(ResultCode resultCode)</span> </span>&#123;</span><br><span class="line">		Result result = <span class="keyword">new</span> Result();</span><br><span class="line">		result.setResultCode(resultCode);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作失败，没有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">failure</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result(ResultCode.ERROR.code(),message);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作失败，有返回的数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Result&lt;T&gt; <span class="title">failure</span><span class="params">(ResultCode resultCode, T data)</span> </span>&#123;</span><br><span class="line">		Result result = <span class="keyword">new</span> Result();</span><br><span class="line">		result.setResultCode(resultCode);</span><br><span class="line">		result.setData(data);</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="全局异常"><a href="#全局异常" class="headerlink" title="全局异常"></a>全局异常</h2><p><strong>定制异常</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.web.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.ResultCode;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/31-10-31-15:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：自定义异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> ResultCode resultCode; <span class="comment">// 抛出的枚举对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomerException</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// throw new CustomerException(ResultCode.PARAM_IS_BLANK);</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomerException</span><span class="params">(ResultCode resultCode)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.resultCode = resultCode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>抛出异常</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.briup.cms.service.IConfigService;</span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.exception.CustomerException;</span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.Result;</span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.ResultCode;</span><br><span class="line"><span class="keyword">import</span> com.briup.user.bean.Config;</span><br><span class="line"><span class="keyword">import</span> com.briup.user.dao.ConfigMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/31-10-31-11:11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：com.briup.cms.web.controller</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span> <span class="comment">// @Controller 跳转页面</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/config&quot;)</span> <span class="comment">// 一级路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span> <span class="comment">// 从容器中取出实现类</span></span><br><span class="line">    <span class="keyword">private</span> IConfigService configService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span> <span class="comment">// 二级路径</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">selectConfigStatusWithOn</span><span class="params">()</span> <span class="keyword">throws</span> RuntimeException </span>&#123;</span><br><span class="line">        List&lt;Config&gt; data = configService.selectList();</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//            throw new CustomerException(&quot;参数有误&quot;);</span></span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> CustomerException(ResultCode.PARAM_IS_BLANK);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.success(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>捕获异常</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.web.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.Result;</span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.ResultCode;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/31-10-31-15:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：全局异常处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@ControllerAdvice 页面</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span> <span class="comment">// @RestController + @Advice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有异常都会被捕获 返回统一格式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex 所有异常的父类 (多态接收可能抛出的异常)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 统一响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">handler</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;GlobalExceptionHandler.handler&quot;</span>);</span><br><span class="line">        <span class="comment">// 第三方类的异常</span></span><br><span class="line">        <span class="comment">// 自定义的异常</span></span><br><span class="line">        <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> CustomerException) &#123;</span><br><span class="line"><span class="comment">//            String message = ex.getMessage();</span></span><br><span class="line">            CustomerException ce = (CustomerException) ex;</span><br><span class="line">            <span class="comment">// throw ReusltCode 此时能取出来</span></span><br><span class="line">            <span class="comment">//ResultCode resultCode = ce.getResultCode();  // 参数枚举对象</span></span><br><span class="line">            <span class="keyword">return</span> Result.failure(ce.getResultCode());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.failure(ResultCode.SYSTEM_INNER_ERROR);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h2><p><strong>实体校验</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.user.bean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 不用设置 mysql自增增长</span></span><br><span class="line">    <span class="keyword">private</span> Integer configId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;配置名称不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;配置信息不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;配置图标不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configIcon;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;配置状态不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer configStatus;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getConfigId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigId</span><span class="params">(Integer configId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configId = configId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getConfigName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigName</span><span class="params">(String configName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configName = configName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getConfigInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigInfo</span><span class="params">(String configInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configInfo = configInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getConfigIcon</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configIcon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigIcon</span><span class="params">(String configIcon)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configIcon = configIcon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getConfigStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigStatus</span><span class="params">(Integer configStatus)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.configStatus = configStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>控制器校验</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// @RequestBody 获取json格式的请求体</span></span><br><span class="line">        <span class="comment">// 不加就是接收普通请求体</span></span><br><span class="line">    <span class="comment">// @ReponseBody 返回json格式</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">addConfig</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> Config config)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;config = &quot;</span> + config);</span><br><span class="line">        configService.addConfig(config);</span><br><span class="line">        <span class="keyword">return</span> Result.success(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><strong>异常捕获</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.web.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.Result;</span><br><span class="line"><span class="keyword">import</span> com.briup.common.web.response.ResultCode;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/31-10-31-15:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：全局异常处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//@ControllerAdvice 页面</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span> <span class="comment">// @RestController + @Advice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所有异常都会被捕获 返回统一格式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex 所有异常的父类 (多态接收可能抛出的异常)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 统一响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">handler</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ex.getClass() = &quot;</span> + ex.getClass());</span><br><span class="line">        ex.printStackTrace(); <span class="comment">// 查看错误</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第三方类的异常</span></span><br><span class="line">        <span class="comment">// 自定义的异常</span></span><br><span class="line">        <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> CustomerException) &#123;</span><br><span class="line"><span class="comment">//            String message = ex.getMessage();</span></span><br><span class="line">            CustomerException ce = (CustomerException) ex;</span><br><span class="line">            <span class="comment">// throw ReusltCode 此时能取出来</span></span><br><span class="line">            <span class="comment">//ResultCode resultCode = ce.getResultCode();  // 参数枚举对象</span></span><br><span class="line">            <span class="keyword">return</span> Result.failure(ce.getResultCode());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> MethodArgumentNotValidException)&#123;</span><br><span class="line">            <span class="comment">// 取出MethodArgumentNotValidException中的错误数据</span></span><br><span class="line">            MethodArgumentNotValidException mane= (MethodArgumentNotValidException) ex;</span><br><span class="line">            <span class="comment">// 绑定的错误字段结果</span></span><br><span class="line">            BindingResult bindingResult = mane.getBindingResult();</span><br><span class="line">            <span class="keyword">if</span> (bindingResult.hasFieldErrors()) &#123;</span><br><span class="line">                <span class="comment">// @NotNull(message = &quot;配置名称不能为空&quot;)</span></span><br><span class="line">                String errorMessage = bindingResult.getFieldErrors().get(<span class="number">0</span>).getDefaultMessage();</span><br><span class="line">                <span class="keyword">return</span> Result.failure(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 其他异常</span></span><br><span class="line">        <span class="keyword">return</span> Result.failure(ResultCode.SYSTEM_INNER_ERROR);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="swagger"><a href="#swagger" class="headerlink" title="swagger"></a>swagger</h2><blockquote>
<p>项目采用前后台分离的架构进行开发，后台可以使用Swagger，生成在线API文档，方便前端人员对接使用</p>
</blockquote>
<p><a href="https://petstore.swagger.io/?_ga=2.236238660.419502645.1636559508-49422942.1636559508">配置生成的在线API文档样例：</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210311841822.png" alt="image-20221031183914262"></p>
<p><strong>依赖</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描springmvc提供的接口 生成文档--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--html ui界面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>springfox </code>，是一个开源的API Doc的框架， 它的前身是swagger-springmvc，可以将我们的Controller中的方法以文档的形式展现。</p>
<p><strong>配置</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.common.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/31-10-31-17:20</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：swagger配置类</span></span><br><span class="line"><span class="comment"> * 默认ui页面 localhost:8989/swagger-ui.html</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Config</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 配置页面信息 Docket 放入容器中</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">&quot;中台管理系统&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;jd2204全体开发&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    apiInfo swagger前置说明</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置指定扫描包</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>使用</strong></p>
<h2 id="jwt"><a href="#jwt" class="headerlink" title="jwt"></a>jwt</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>传统的Web应用中，使用session来存在用户的信息，每次用户认证通过以后，服务器需要创建一条记录保存用户信息，通常是在内存中。</p>
<ul>
<li>随着认证通过的用户越来越多，服务器的在这里的开销就会越来越大,</li>
<li>由于Session是在内存中的，这就带来一些扩展性的问题<ul>
<li>servlet依赖于web容器    </li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312155865.png" alt="image-20210318005044861"></p>
<blockquote>
<p>JSON Web Token (JWT,token的一种)，是一个开放标准(RFC 7519)，它定义了一种紧凑的、自包含的方式，用于作为JSON对象在各方之间安全地传输信息。该信息可以被验证和信任，因为它是数字签名的。</p>
</blockquote>
<ul>
<li>JWT存放在客户端（前端），每次请求的请求头中，携带此JWT发送给服务器，服务器端负责接收<br>和验证</li>
<li>服务器端可以不用存储JWT，这样可以降低服务器的内存的开销</li>
<li>JWT和语言无关，扩展起来非常方便，无论是PC端还是移动端，都可以很容易的使用</li>
<li>不受cookie的限制</li>
</ul>
<p>如图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312155290.png" alt="image-20210318005232445"></p>
<blockquote>
<p>注意，session和JWT的主要区别就是保存的位置，session是保存在服务端的，而JWT是保存在客户<br>端的</p>
</blockquote>
<blockquote>
<p>注意，JWT就是一个固定格式的字符串</p>
</blockquote>
<p><a href="https://jwt.io/">JWT官网</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312155571.png" alt="image-20210318005358285"></p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><h4 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h4><blockquote>
<p>header一般的由两部分组成：token的类型（“JWT”）和算法名称（比如：HMAC SHA256或者RSA等等）。</p>
</blockquote>
<p>JWT里验证和签名使用的算法列表如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312200338.png" alt="image-20210319084933149"></p>
<p>例如，</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="载荷"><a href="#载荷" class="headerlink" title="载荷"></a>载荷</h4><blockquote>
<p>payload主要用来包含声明（claims ），这个声明一般是关于实体(通常是用户)和其他数据的声明。</p>
</blockquote>
<p>声明有三种类型:</p>
<ul>
<li>registered</li>
<li>public</li>
<li>private</li>
</ul>
<p>具体如下：</p>
<p>Registered claims : 这里有一组预定义的声明，它们不是强制的，但是推荐。</p>
<ul>
<li>iss: jwt签发者</li>
<li>sub: jwt所面向的用户</li>
<li>aud: 接收jwt的一方</li>
<li>exp: jwt的过期时间，这个过期时间必须要大于签发时间 </li>
<li>nbf: 定义在什么时间之前，该jwt都是不可用的</li>
<li>iat: jwt的签发时间</li>
<li>jti: jwt的唯一身份标识，主要用来作为一次性token，从而回避重放攻击</li>
</ul>
<p>Public claims : 可以随意定义</p>
<ul>
<li>自定义数据:存放在token中存放的key-value值</li>
</ul>
<p>Private claims : 用于在同意使用它们的各方之间共享信息，并且不是注册的或公开的声明</p>
<p>例如，</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;iss&quot;</span>: <span class="string">&quot;briup&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;iat&quot;</span>: <span class="number">1446593502</span>,</span><br><span class="line">    <span class="attr">&quot;exp&quot;</span>: <span class="number">1446594722</span>,</span><br><span class="line">    <span class="attr">&quot;aud&quot;</span>: <span class="string">&quot;www.briup.com&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;sub&quot;</span>: <span class="string">&quot;briup@briup.com&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;username&quot;</span>: <span class="string">&quot;tom&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意，不要在JWT的payload或header中放置敏感信息，除非它们是加密的</p>
</blockquote>
<p>把头部和载荷分别进行Base64编码之后得到两个字符串，然后再将这两个编码后的字符串用英文句号.<br>连接在一起（头部在前），形成新的字符串：</p>
<p><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MmI2OWNlZC02YWNlLTRmYzAtOTk5MS00YWUwMjIxODQ0OTciLCJleHAiOjE2MDYwNTQzNjl9</code></p>
<p><a href="http://tool.chinaz.com/tools/base64.aspx">测试编码</a></p>
<h4 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h4><p>最后，将上面拼接完的字符串用HS256算法进行加密，在加密的时候，还需要提供一个密钥（secret）。加密后的内容也是一个字符串，这个字符串就是签名。</p>
<p>把这个签名拼接在刚才的字符串后面就能得到完整的JWT字符串。<br>header部分和payload部分如果被篡改，由于篡改者不知道密钥是什么，也无法生成新的signature部分，<br>服务端也就无法通过。</p>
<blockquote>
<p>在JWT中，消息体是透明的，使用签名可以保证消息不被篡改。</p>
</blockquote>
<blockquote>
<p>确保密钥不会泄露,否则会被篡改</p>
</blockquote>
<p>例如，使用HMACSHA256加密算法，配合秘钥，将前俩部进行加密，生成签名</p>
<p><code>HMACSHA256(base64UrlEncode(header) + &quot;.&quot; + base64UrlEncode(payload), secret)</code></p>
<p>例如，将Header、Payload、Signature三部分使用点（.）连接起来</p>
<p><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MmI2OWNlZC02YWNlLTRmYzAtOTk5MS00Y WUwMjIxODQ0OTciLCJleHAiOjE2MDYwNTQzNjl9.DNVhr36j66JpQBfcYoo64IRp84dKiQeaq7axHTBcP9 E</code></p>
<p>例如，使用官网提供的工具，可以对该JWT进行验证和解析（不要放敏感信息）</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312200931.png" alt="image-20210319085334765"></p>
<blockquote>
<p>注意，在代码中，我们使用JWT封装的工具类，也可以完成此操作 sso</p>
</blockquote>
<h3 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h3><p><strong>依赖</strong></p>
<p><strong>工具类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWTVerifier;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.algorithms.Algorithm;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.exceptions.JWTDecodeException;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.exceptions.JWTVerificationException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtil</span> </span>&#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间5分钟</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EXPIRE_TIME = <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jwt 密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRET = <span class="string">&quot;jwt_secret&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成签名，五分钟后过期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> info，Map的value只能存放的值的类型为：Map, List, Boolean, Integer, Long, Double, String and Date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sign</span><span class="params">(String userId,Map&lt;String,Object&gt; info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Date date = <span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRE_TIME);</span><br><span class="line">            Algorithm algorithm = Algorithm.HMAC256(SECRET);</span><br><span class="line">            <span class="keyword">return</span> JWT.create()</span><br><span class="line">                    <span class="comment">// 将 user id 保存到 token 里面</span></span><br><span class="line">                    .withAudience(userId)</span><br><span class="line">                    <span class="comment">// 存放自定义数据</span></span><br><span class="line">                    .withClaim(<span class="string">&quot;info&quot;</span>, info)</span><br><span class="line">                    <span class="comment">// 五分钟后token过期</span></span><br><span class="line">                    .withExpiresAt(date)</span><br><span class="line">                    <span class="comment">// token 的密钥</span></span><br><span class="line">                    .sign(algorithm);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        	e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取userId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUserId</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String userId = JWT.decode(token).getAudience().get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> userId;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTDecodeException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取自定义数据info</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,Object&gt; <span class="title">getInfo</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> JWT.decode(token).getClaim(<span class="string">&quot;info&quot;</span>).asMap();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTDecodeException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkSign</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Algorithm algorithm = Algorithm.HMAC256(SECRET);</span><br><span class="line">            JWTVerifier verifier = JWT.require(algorithm)</span><br><span class="line">                    <span class="comment">// .withClaim(&quot;username&quot;, username)</span></span><br><span class="line">                    .build();</span><br><span class="line">            verifier.verify(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JWTVerificationException exception) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;token 无效，请重新获取&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h3 id="swagger-1"><a href="#swagger-1" class="headerlink" title="swagger"></a>swagger</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vanse.common.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Predicate;</span><br><span class="line"><span class="keyword">import</span> com.google.common.base.Predicates;</span><br><span class="line"><span class="keyword">import</span> com.vanse.common.properties.JwtConfigProperties;</span><br><span class="line"><span class="keyword">import</span> com.vanse.common.properties.SwaggerConfigProperties;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiKey;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.AuthorizationScope;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.SecurityReference;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.service.contexts.SecurityContext;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Auther</span>: vanse(lc))</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/10/29-10-29-16:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>：com.vanse.common.config</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(&quot;vanse.config.swagger.title&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Config</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 以下不写含有默认配置</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SwaggerConfigProperties swaggerConfigProperties;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtConfigProperties jwtConfigProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line"><span class="comment">//                .apis(RequestHandlerSelectors.basePackage())</span></span><br><span class="line">                .apis(RequestHandlerSelectors.withClassAnnotation(Api.class))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build()</span><br><span class="line">                .securitySchemes(security())</span><br><span class="line">                .securityContexts(securityContexts());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;SecurityContext&gt; <span class="title">securityContexts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 例如，/auth/**</span></span><br><span class="line"><span class="comment">//   antPaths.addAll(ConfigConstants.SWAGGER_AUTH_PATH);</span></span><br><span class="line">        List&lt;String&gt; antPaths = <span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(jwtConfigProperties.getAuthPath()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Collections.singletonList(</span><br><span class="line">                SecurityContext.builder()</span><br><span class="line">                        .securityReferences(defaultAuth())</span><br><span class="line">                        .forPaths(antPathsCondition(antPaths))</span><br><span class="line">                        .build()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;SecurityReference&gt; <span class="title">defaultAuth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        AuthorizationScope authorizationScope = <span class="keyword">new</span> AuthorizationScope(<span class="string">&quot;global&quot;</span>, <span class="string">&quot;accessEverything&quot;</span>);</span><br><span class="line">        AuthorizationScope[] authorizationScopes = <span class="keyword">new</span> AuthorizationScope[<span class="number">1</span>];</span><br><span class="line">        authorizationScopes[<span class="number">0</span>] = authorizationScope;</span><br><span class="line">        <span class="keyword">return</span> Collections.singletonList(</span><br><span class="line">                <span class="keyword">new</span> SecurityReference(<span class="string">&quot;Authorization&quot;</span>, authorizationScopes));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Predicate&lt;String&gt; <span class="title">antPathsCondition</span><span class="params">(List&lt;String&gt; antPaths)</span></span>&#123;</span><br><span class="line"><span class="comment">//   if(antPaths==null||antPaths.size()==0) &#123;</span></span><br><span class="line"><span class="comment">//     antPaths = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">//     antPaths.add(&quot;/**&quot;);</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line">        List&lt;Predicate&lt;String&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        antPaths.forEach(path-&gt;list.add(PathSelectors.ant(path)));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Predicates.or(list);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;ApiKey&gt; <span class="title">security</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Collections.singletonList(</span><br><span class="line">                <span class="keyword">new</span> ApiKey(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;header&quot;</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(swaggerConfigProperties.getTitle())</span><br><span class="line">                .description(swaggerConfigProperties.getDescription())</span><br><span class="line">                .termsOfServiceUrl(swaggerConfigProperties.getUrl())</span><br><span class="line">                .version(swaggerConfigProperties.getVersion())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="cors"><a href="#cors" class="headerlink" title="cors"></a>cors</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>跨域访问，是指从一个域名的网页去请求另一个域名的资源。比如从<a href="http://www.baidu.com/">www.baidu.com</a> 页面去请求 <a href="http://www.google.com/">www.google.com</a> 的资源。但是一般情况下不能这么做跨域访问，因为有浏览器的“<strong>同源策略</strong>”存在，这是浏览器对JavaScript施加的安全限制。</p>
<blockquote>
<p>跨域，指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对JavaScript施加的安全限制。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312202215.png" alt="image-20210321224558036"></p>
<p><strong>“同源策略”</strong>简单的说，就是A网站页面访问B网站的资源受限（跨域访问），除非A和B是“同源”。<br><strong>“同源”</strong>是指三个相同，协议相同、域名相同、端口相同，只有有任何一个地方不同，就认为是跨域。</p>
<p>例如，<br>网页A的地址为， <a href="http://www.example.com/dir/page.html">http://www.example.com/dir/page.html</a><br>假设，网页A要访问的网页B地址为：</p>
<ul>
<li><a href="http://www.example.com/dir2/other.html">http://www.example.com/dir2/other.html</a> ： 同源（正常访问）</li>
<li><a href="https://www.example.com/dir/other.html">https://www.example.com/dir/other.html</a> ：不同源（协议不同，跨域）</li>
<li><a href="http://vip.www.example.com/dir/other.html">http://vip.www.example.com/dir/other.html</a> ：不同源（域名不同，跨域）</li>
<li><a href="http://www.example.com:81/dir/other.html">http://www.example.com:81/dir/other.html</a> ：不同源（端口不同，跨域）</li>
</ul>
<p>随着互联网的发展，“同源政策”越来越严格，目前，如果非同源（跨域），共有三种行为受到限制：</p>
<ul>
<li>Cookie 、LocalStorage、IndexDB 无法访问</li>
<li>DOM 无法获取</li>
<li>AJAX请求不能发送</li>
</ul>
<p>浏览器的用“同源策略”来限制跨域访问的目的是为了安全，例如，假设没有跨域访问的限制</p>
<ul>
<li><p>用户访问<a href="http://www.mybank.com/">www.mybank.com</a> ，登陆并进行网银操作，这时cookie、token等数据信息存放在浏览器中</p>
</li>
<li><p>用户访问<a href="http://www.abc.com/">www.abc.com</a></p>
</li>
<li><p>这时<a href="http://www.abc.com/">www.abc.com</a> 网站就可以在拿到银行的cookie或token等，然后发起对<a href="http://www.mybank.com/">www.mybank.com</a> 的操作</p>
</li>
</ul>
<p>我们在项目中，需要设置对跨域访问的支持，是因为项目的架构需要，例如</p>
<ul>
<li>公司内部有多个不同的子系统，例如A和B，分别部署在不同的服务器上，其域名也不相同</li>
<li>由于公司内部的数据需要，现在A系统中，跨域访问B系统，从而获取内部的一些信息资源</li>
</ul>
<blockquote>
<p>注意，在前后端分离的项目中，前端页面部署在一个服务器上，后端项目部署在另一个服务器上，从前端页面上发送ajax请求到后端系统中，这种情况，就属于跨域访问</p>
</blockquote>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>1、新建项目，springboot-html</p>
<img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312204691.png" alt="image-20210321230538847" style="zoom:50%;" />



<p>2、页面代码：ajax.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;script src=&quot;https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不需要写static--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;.btn1&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(msg);</span></span><br><span class="line"><span class="javascript">                    &#125;,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&#x27;error&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3、pom文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>4、配置文件application.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">9999</span></span><br></pre></td></tr></table></figure>

<p>5、Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/ajax&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;ajax&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>6、运行访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205145.png" alt="image-20210321231102544"></p>
<p><strong>再构建提供接口访问的后端项目</strong></p>
<p>1、新建项目，springboot-cors</p>
<img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205438.png" alt="image-20210321231146093" style="zoom:67%;" />

<p>2、pom文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>3、配置文件，application.properties</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8989</span></span><br></pre></td></tr></table></figure>

<p>4、Controller</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5、启动，访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205941.png" alt="image-20210321231321782"></p>
<p>最后，访问springboot-html项目中的ajax.html页面，点击页面中的按钮，发送ajax请求，访问springbootcors<br>项目中的接口：</p>
<p>当前页面的访问地址： <a href="http://localhost:9999/ajax">http://localhost:9999/ajax</a><br>点击按钮后请求地址： <a href="http://localhost:8989/hi">http://localhost:8989/hi</a><br>可以看出，此时这俩个地址，属于“非同源”，本次访问属于跨域访问。</p>
<p>点击后，控制台上输出的错误信息：<br>已拦截跨源请求：同源策略禁止读取位于 <a href="http://localhost:8989/hi">http://localhost:8989/hi</a> 的远程资源。<br>（原因：CORS 头缺少 ‘Access-Control-Allow-Origin’）。</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205547.png" alt="image-20210321232022681"></p>
<p>点开网络模块，查看具体的请求信息：<br>请求头中，自动添加了信息 Origin: <a href="http://localhost:9999/">http://localhost:9999</a> ，通知服务器本次是跨域访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205528.png" alt="image-20210321232136576"></p>
<p>从本次响应的内容中，可以看到，其实响应的内容已经成功返回了，但是由于浏览器的同源政策，把这些结果都给舍弃了。并且执行了Ajax中的回调函数error</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312205022.png" alt="image-20210321232221184"></p>
<h3 id="cors-1"><a href="#cors-1" class="headerlink" title="cors"></a>cors</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>CORS(Cross-origin resource sharing)，是一个W3C标准，全称是”跨域资源共享”。</p>
<ul>
<li>整个CORS通信过程，都是浏览器自动完成，不需要用户参与。</li>
<li>对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。</li>
<li>浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息。（Origin）</li>
<li>有时还会多出一次附加的请求，但用户不会有感觉。（options方式的请求）</li>
</ul>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>浏览器将CORS请求分成两类：</p>
<ul>
<li>简单请求（simple request）</li>
<li>非简单请求（not-so-simple request）</li>
</ul>
<p>只要同时满足以下两大条件，就属于简单请求：</p>
<p>请求方法是以下三种方法之一<br>    GET<br>    POST<br>    HEAD<br>HTTP的头信息不超出以下几种字段<br>    Accept<br>    Accept-Language</p>
<p>​    Content-Language<br>​    Last-Event-ID<br>​    Content-Type，该字段的值只能是以下三种</p>
<p>​        application/x-www-form-urlencoded</p>
<p>​        multipart/form-data<br>​        text/plain</p>
<blockquote>
<p>注意，只要不能同时满足上面两个条件，就属于非简单请求。</p>
</blockquote>
<h4 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h4><p>对于简单请求，浏览器直接发出CORS请求，同时在请求头中增加一个Origin字段。<br>该字段表示，本次请求来自哪个源（协议 + 域名 + 端口），服务器根据这个值，决定是否同意这次请<br>求。</p>
<p>Origin指定的源，即使不在服务器许可范围内，服务器还是会返回一个正常的HTTP响应，但是响应头中<br>不含指定Access-Control-Allow-Origin字段，浏览器这时候就知道本次跨域访问失败。<br>但是这个时候，响应状态可能是200，同时在一些工具中还能看到正确的返回值。<br>例如，</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312204470.png" alt="image-20210322070848847"></p>
<p>其中，</p>
<ol>
<li>浏览器在请求头中自动添加了Origin 字段</li>
<li>服务器在响应中没有添加Access-Control-Allow-Origin 字段（说明服务器不支持此请求跨域访<br>问）</li>
<li>响应的状态码是200，并且从响应内容中可以看到正确的返回内容</li>
<li>同时，浏览器会抛出一个错误，被ajax的核心对象XMLHttpRequest的onerror 回调函数捕获</li>
</ol>
<p>如果Origin指定的域名在服务器的许可范围内，服务器返回的响应，会多出几个头信息字段：</p>
<ol>
<li><p>Access-Control-Allow-Origin<br>该字段是必须的。<br>它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的跨域请求。</p>
</li>
<li><p>Access-Control-Allow-Credentials</p>
<p>该字段可选<br>表示是否允许发送Cookie。<br>设为true，即表示服务器已经允许了，跨域请求中可以携带Cookie。<br>但是这需要AJAX中设置withCredentials=true进行配合。<br>如果服务器不要浏览器发送Cookie，删除该字段即可。</p>
</li>
</ol>
<p><code>3. Access-Control-Expose-Headers</code></p>
<p>​    该字段可选<br>​    列出了哪些首部可以作为响应的一部分暴露给外部。<br>​    默认情况下，只有七种可以暴露给外部<br>​    Cache-Control<br>​    Content-Language<br>​    Content-Length<br>​    Content-Type<br>​    Expires<br>​    Last-Modified<br>​    Pragma</p>
<p>​    如果想要让客户端可以访问到其他的首部信息，可以将它们在Access-Control-Expose-Headers里面指定</p>
<h4 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h4><p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。<br>非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）。<br>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词<br>和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。</p>
<p>例如，</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;.btn1&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span><br><span class="line">        <span class="attr">contentType</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(msg);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意，在请求头中，指定contentType为application/json</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312204762.png" alt="image-20210322071208502"></p>
<blockquote>
<p>可以看出，请求头中有Content-Type:application/json 字段，属于非简单请求，浏览器会提前发送一个option方式的“预检请求”(预检请求会缓存)</p>
</blockquote>
<p>在这个“预检请求”的响应中，服务器会返回一些数据来通知浏览器，服务器对跨域请求的要求</p>
<p><img src="https://cdn.jsdelivr.net/gh/wangsidandan/blog_images@main/linux/202210312204956.png" alt="image-20210322071259213"></p>
<p>如果浏览器否定了“预检”请求，也会返回一个正常的HTTP回应，但是没有任何CORS相关的头信息字段。<br>这时，浏览器就会认定，服务器不同意预检请求，因此触发一个错误，被XMLHttpRequest对象的onerror<br>回调函数捕获。</p>
<blockquote>
<p>测试简单请求和非简单请求</p>
</blockquote>
<p>==“预检”成功的常见响应头部字段有：==</p>
<ul>
<li>Access-Control-Allow-Origin 配置ip</li>
<li>Access-Control-Allow-Methods 配置请求方式</li>
<li>Access-Control-Allow-Headers 配置请求头</li>
<li>Access-Control-Allow-Credentials 配置是否信任cookie<br>标签允许客户端携带验证信息，例如 cookie<pre><code>Access-Control-Max-Age
表示预检请求的返回结果（即Access-Control-Allow-Methods 和Access-Control-Allow-Headers提供的信息） 可以被缓存多久。
</code></pre>
</li>
</ul>
<p>注意，ajax跨域访问的时候，如果需要在请求中携带cookie，需要有以下设置</p>
<ol>
<li><p>前端ajax请求中，指定withCredentials属性为ture</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span><br><span class="line">    <span class="attr">xhrFields</span>:&#123;</span><br><span class="line">   		 <span class="attr">withCredentials</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(msg);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
<li><p>后端响应头中，设置Access-Control-Allow-Credentials属性为true</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//允许跨域携带cookie</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="3">
<li>后端响应头中，设置Access-Control-Allow-Origin属性为具体的值，而不是能通配符*</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</span></span><br><span class="line">response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;http://127.0.0.1:9999&quot;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 允许cookie的情况下 前端配置 后台配置</span></span><br><span class="line">	<span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">		response.setHeader(<span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">		response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;http://localhost:9999&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">   <span class="comment">// 不允许cookie的情况下</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">		response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>前端访问 <a href="http://localhost:9999/ajax">http://localhost:9999/ajax</a> 后台就配 localhost</p>
<p>此时无法处理预检查请求</p>
</blockquote>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>springboot-html项目中的ajax.html页面：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;script src=&quot;https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js&quot;&gt;&lt;/script&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;.btn1&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(msg);</span></span><br><span class="line"><span class="javascript">                    &#125;,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&#x27;error&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;.btn2&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">url</span> : <span class="string">&quot;/api/hi&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(msg);</span></span><br><span class="line"><span class="javascript">                    &#125;,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&#x27;error&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;.btn3&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(msg);</span></span><br><span class="line"><span class="javascript">                    &#125;,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&#x27;error&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn2&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn3&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意，这里主要测试的是test3按钮</p>
</blockquote>
<p>springboot-cors项目中的Controller：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.web.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>springboot-cors项目中的配置类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.briup.cms.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)<span class="comment">//映射所有路径</span></span><br><span class="line">        .allowedOrigins(<span class="string">&quot;*&quot;</span>)<span class="comment">//运行所有客户端访问</span></span><br><span class="line">        .allowCredentials(<span class="keyword">false</span>)<span class="comment">//不允许携带cookie</span></span><br><span class="line">        .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)<span class="comment">//</span></span><br><span class="line">        支持的方法</span><br><span class="line">        .allowedHeaders(<span class="string">&quot;*&quot;</span>)<span class="comment">//运行所有请求头字段</span></span><br><span class="line">        .maxAge(<span class="number">3600</span>);<span class="comment">//允许客户端缓存“预检请求”中获取的信息，3600秒</span></span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意，这里主要配置了跨域访问的属性</p>
</blockquote>
<p>启动俩个项目，访问页面，点击按钮，测试ajax跨域访问：</p>
<blockquote>
<p>可以看出，此时ajax请求进行跨域访问，已经成功</p>
</blockquote>
<blockquote>
<p>注意，此时可以尝试在ajax请求中，设置contentType: application/json ,观察是否会发出“预检”请求</p>
</blockquote>
<p>同时，也可以修改ajax请求，让其写的cookie和指定字段的头部：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;.btn3&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">url</span> : <span class="string">&quot;http://localhost:8989/hi&quot;</span>,</span><br><span class="line">        <span class="attr">xhrFields</span>:&#123;</span><br><span class="line">        <span class="attr">withCredentials</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">headers</span>:&#123;</span><br><span class="line">        <span class="attr">token</span>:<span class="string">&quot;aaa.bbb.ccc&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">contentType</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(msg);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>此时，对应的后端跨域设置为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">        .allowedOrigins(<span class="string">&quot;http://localhost:9999&quot;</span>)</span><br><span class="line">        .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">        .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)</span><br><span class="line">        .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">        .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">    registry.addMapping(<span class="string">&quot;/**&quot;</span>)<span class="comment">//映射所有路径</span></span><br><span class="line">    .allowedOrigins(<span class="string">&quot;*&quot;</span>)<span class="comment">//运行所有客户端访问</span></span><br><span class="line">    .allowCredentials(<span class="keyword">false</span>)<span class="comment">//不允许携带cookie</span></span><br><span class="line">    .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>)<span class="comment">//支持的方法</span></span><br><span class="line">    .allowedHeaders(<span class="string">&quot;*&quot;</span>)<span class="comment">//运行所有请求头字段</span></span><br><span class="line">    .maxAge(<span class="number">3600</span>);<span class="comment">//允许客户端缓存“预检请求”中获取的信息，3600秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在此配置中，如果设置allowCredentials(true) ，那么allowedOrigins(“*”) 这里就不能使用通<br>配符了，必须要写一个或者多个（可变参数）客户端的地址<br>例如， allowedOrigins(“<a href="http://127.0.0.1:9999&quot;">http://127.0.0.1:9999&quot;</a>)</p>
<p>另外，如果只是想让Controller中的某一个方法或者几个方法被跨域访问，那么可以在方法上使用<br>@CrossOrigin 注解，例如</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@CrossOrigin(origins = &#123;&quot;http://127.0.0.1:9999&quot;&#125;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hi&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意，此时就不需要在配置类中做其他配置了，直接一个注解就可以让该方法被跨域访问了</p>
</blockquote>
<h1 id="业务"><a href="#业务" class="headerlink" title="业务"></a>业务</h1>]]></content>
      <tags>
        <tag>vanse_public</tag>
      </tags>
  </entry>
  <entry>
    <title>vanse_theory</title>
    <url>/archives/vanse-theory.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>vanse的个人笔记</p>
</blockquote>
]]></content>
      <tags>
        <tag>vanse_private</tag>
      </tags>
  </entry>
</search>
